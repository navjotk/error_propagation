#!/bin/bash -l
# Batch script to run an OpenMP threaded job on Legion with the upgraded
# software stack under SGE.
# 1. Force bash as the executing shell.
#$ -S /bin/bash
# 2. Request ten minutes of wallclock time (format hours:minutes:seconds).
#$ -l h_rt=3:0:0
# 3. Request 1 gigabyte of RAM for each core/thread (must be an integer)
#$ -l mem=128G
# 4. Request 15 gigabyte of TMPDIR space (default is 10 GB)
#$ -l tmpfs=15G
# 5. Set the name of the job.
#$ -N error-prop-gradient
# 6. Select 12 threads (the most possible on Legion).
# 7. Set the working directory to somewhere in your scratch space.  This is
# a necessary step with the upgraded software stack as compute nodes cannot
# write to $HOME.
# Replace "<your_UCL_id>" with your UCL user ID :)
#$ -wd /home/mmm0334/Scratch/output
#$ -A Imperial_ESE
# 5. Set up the job array.  In this instance we have requested 10000 tasks
# numbered 1 to 10000.
#$ -t 1-16
# 8. Run the application.
module load python/miniconda3/4.5.11
. /shared/ucl/apps/miniconda/4.5.11/etc/profile.d/conda.sh
conda activate devito
export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$HOME/pyzfp/zfp-0.5.3/lib:/$HOME/pysz/sz-2.0.2.0/lib
export DEVITO_OPENMP=1
export DEVITO_ARCH=intel
export DEVITO_LOGGING=DEBUG
python -u /home/mmm0334/error_propagation/forward_error.py --ncp 15 --compression zfp --tolerance $SGE_TASK_ID
